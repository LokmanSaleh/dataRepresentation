package com.automl.datarepresentation.service;

import java.util.Map;
import java.util.TreeMap;

import com.automl.datarepresentation.bean.Table;

/** Veuillez noter que l'auto generation de requet SQL ici est exhaustive,
 * cela, doit retourner une solution correct mais pas du facon performante.
 * une solution performante non exhaustive, besoin de travailler sur les algorithms de graphe
 * ce qui a besoin un peu plus du temps. Vue que notre probleme essentiel n'est pas cette point ici
 * cette solution est semi-automatique. 
 */
public class SQLAutoGenerated {
	
	private static String request = "";
	
	/**
	 * generate the requested query
	 * @param tables All the tables
	 */
	public static void generateRequest(TreeMap<String, Table> tables) {
		
		request = "";
		String select = "SELECT DISTINCT ";
		String from =" From ";
		String where=" Where ";
		
		for (Map.Entry<String, Table> table : tables.entrySet() ) {
			
			table.getValue().generateSelectFromWhere(tables);
			
			select += table.getValue().getSelect();
			from += table.getValue().getFrom();
			
			where += table.getValue().getWhere();
		}
		
		// remove the last comma
		if (select.length() > "SELECT DISTINCT ".length() ) 
			select = select.substring(0, select.length() -2);
		else 
			select ="";
		
		// remove the last comma
		if (from.length() > " From ".length() ) 
			from = from.substring(0, from.length() -2);
		else 
			from="";

		// remove the last AND from where
		if (where.length() > " Where ".length() ) 
			where = where.substring(0, where.length() -5);
		else 
			where = "";
		
		if (select.length() > 0)
			request = select + "\n"+ from + "\n" + where;
		else 
			request = "";
	}

	/**
	 * @return the request
	 */
	public static String getRequest() {
		return request;
	}

}
